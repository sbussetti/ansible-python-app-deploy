---
- name: set facts
  set_fact:
    app_src_project_root: "{{app_src_root}}{{app.src_path_suffix|default('', true)}}"

- name: install deploy ssh key
  become: true
  become_user: "{{app.user}}"
  copy:
    content="{{app.deploy_rsa_key}}"
    dest=/home/{{app.user}}/.ssh/id_rsa-{{app_name}}
    owner={{app.user}}
    group={{app.user}}
    mode=0600

- name: Deploy Source
  become: true
  become_user: "{{app.user}}"
  git: 
    accept_hostkey=True
    depth=1
    force=True
    repo="{{app.repo_url}}"
    dest="{{app_src_root}}" 
    remote="{{app.repo_remote}}" 
    version="{{app.repo_branch}}"
    key_file="/home/{{app.user}}/.ssh/id_rsa-{{app_name}}"

- name: clean stray files from source dir
  become: true
  become_user: "{{app.user}}"
  command: "git clean -df"
  args:
    chdir: "{{app_src_project_root}}"

- name: Install Python app dependencies from pip
  become: true
  become_user: "{{app.user}}"
  pip:
    extra_args="-i {{pypi_mirror_url}}"
    requirements={{app_src_root}}/requirements.txt 
    virtualenv={{app_venv_root}} 
    state=latest
#"

- include: django/deploy.yml
    app={{apps[app_name]}}
  when: "'django' in app.build_steps"

- name: Install app settings file
  become: true
  become_user: "{{app.user}}"
  template:
    src="{{app.python_app_conf_tmpl}}"
    dest="{{app.python_app_conf_path}}"
    owner={{app.user}}
    group={{app.user}}

- name: install custom wsgi
  become: true
  become_user: "{{app.user}}"
  template:
    src="{{app.wsgi_tmpl}}"
    dest="{{app.wsgi_path}}"
    owner={{app.user}}
    group={{app.user}}
  when: app.wsgi_tmpl is defined

- name: pyc cleanup 1
  become: true
  command: pyclean {{app_src_project_root}}
    
- name: pyc cleanup 2
  become: true
  command: find {{app_src_project_root}} -name '*.pyc' -delete

- name: ensure file ownership of source
  become: true
  file:
    path={{app_src_root}}
    owner={{app.user}}
    group={{app.user}}
    recurse=true

- set_fact:
    deploy_runonce_ran: true
  when: hostvars[item]['deploy_runonce_ran'] is defined
  with_items: "{{groups['all']}}"

- include: deploy-runonce.yml
    app={{apps[app_name]}}
  when: deploy_runonce_ran is not defined or not deploy_runonce_ran

- debug: msg="RUNNING ONCE"
  when: deploy_runonce_ran is not defined or not deploy_runonce_ran

- debug: msg="ALREADY RAN"
  when: deploy_runonce_ran is defined and deploy_runonce_ran

- set_fact:
    # don't do it again
    deploy_runonce_ran: true
    # but also tag which instance did it
    deploy_runonce_target: true

# POST DEPLOY    
- name: restart circus app
  command: "circusctl restart {{app_name}}"
  when: "'circus' in app.build_steps and do_webapp"

# TODO: HUP for other runners (supervisor, uwsgi, etc..)
