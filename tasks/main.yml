---

- name: set facts
  set_fact:
    app_root: "{{apps_root}}/{{app_name}}"
    app_src_root: "{{apps_root}}/{{app_name}}/src"
    app_log_root: "{{apps_log_root}}/{{app_name}}"
    app_venv_root: "{{apps_root}}/{{app_name}}/venv"
    app_venv_pip_path: "{{apps_root}}/{{app_name}}/venv/bin/pip"
    app_venv_python_path: "{{apps_root}}/{{app_name}}/venv/bin/python"

- name: install common system packages
  sudo: True
  apt:
    pkg={{item}} 
    state=present
  with_items:
    - git-core
    - python-setuptools
    - python-pip

- name: ensure registration of default domain names
  local_action: route53
  sudo: False
  args:
    private_zone: true
    command: create
    overwrite: True
    zone: "{{item.zone}}"
    record: "{{item.record}}"
    type: A
    ttl: 300
    value: "{{item.value}}" 
    aws_access_key: "{{aws_access_key_id}}"
    aws_secret_key: "{{aws_secret_access_key}}"
  with_items:
    - { record: "{{subdomain}}.{{private_domain}}", zone: "{{private_domain}}", value: "{{ansible_default_ipv4.address}}" }
    - { record: "{{subdomain}}.{{public_domain}}", zone: "{{public_domain}}", value: {{ lookup('dns', inventory_hostname) }} }

# services controlled by build_steps
- include: services.yml
  sudo: true
  sudo_user: "{{deploy_user}}"

- include: web.yml
    app={{apps[app_name]}}
  sudo: true
  sudo_user: "{{deploy_user}}"
  when: do_web or do_webapp

- include: app.yml
    app={{apps[app_name]}}
  sudo: true
  sudo_user: "{{deploy_user}}"
  when: do_app or do_webapp

- include: webapp.yml
    app={{apps[app_name]}}
  sudo: true
  sudo_user: "{{deploy_user}}"
  when: do_webapp

- include: deploy.yml
    app={{apps[app_name]}}
  sudo: true
  sudo_user: "{{deploy_user}}"
  when: do_deploy
