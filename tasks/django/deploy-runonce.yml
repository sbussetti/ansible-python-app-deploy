- name: '[Django] syncdb'
  django_manage:
    command=syncdb
    app_path="{{app_src_project_root}}"
    virtualenv="{{app_venv_root}}"
  become_user: "{{app.user}}"
  environment: "{{app.environment}}"
  when: app.django_syncdb is defined and app.django_syncdb

- name: '[Django] migrate'
  django_manage:
    command=migrate
    app_path="{{app_src_project_root}}"
    virtualenv="{{app_venv_root}}"
  become_user: "{{app.user}}"
  environment: "{{app.environment}}"
  when: app.django_migrate is defined and app.django_migrate

# TODO: parameterize, also install needed extensions
#- name: '[Django] default fixtures'
#  django_manage:
#    command=loaddata
#    fixtures="default_activity_types default_message_templates"
#    app_path="{{app_src_project_root}}"
#    virtualenv="{{app_venv_root}}"
#  environment: app.environment

# - name: '[Django] Prep architect managed tables'
#   command: "{{app_venv_root}}/bin/architect partition --module {{item}}"
#   with_items:
#     - training.activities.models.activity
#     - training.analytics.models  
#   environment: app.environment

# TODO: this all needs to be optional S3 vs local etc
- name: '[Django] ensure static root'
  become_user: "{{app.user}}"
  file:
    state=directory
    path="{{app_root}}/static"
    owner="{{app.user}}"
    group="{{app.user}}"
    mode=0775
  when: do_webapp

- name: '[Django] ensure media root'
  become_user: "{{app.user}}"
  file:
    state=directory
    path="{{app_root}}/media"
    owner="{{app.user}}"
    group="{{app.user}}"
    mode=0775
  when: do_webapp

# collectstatic (can't pass addl args like ignore through ansible's django_manage...)
- name: '[Django] collectstatic'
  command: "{{app_venv_python_path}} manage.py collectstatic --noinput -i _css -i *.scss -v2"
  become_user: "{{app.user}}"
  environment: "{{app.environment}}"
  args:
    chdir: "{{app_src_project_root}}"
  when: app.django_collectstatic is defined and app.django_collectstatic and do_webapp

- name: '[Django] session cleanup'
  django_manage:
    command=cleanup
    app_path="{{app_src_project_root}}"
    virtualenv="{{app_venv_root}}"
  become_user: "{{app.user}}"
  environment: "{{app.environment}}"
  when: app.django_cleanup is defined and app.django_cleanup and do_webapp
