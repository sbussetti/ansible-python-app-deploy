---
# TODO parameterized to respect app.build_steps
# need to balance that against fact that these
# are all server wide installs...

- name: "[web] add nginx ppa"
  sudo: true
  sudo_user: root
  action: apt_repository repo=ppa:nginx/stable state=present
  notify:
    - update apt
# force notification to happen now      
- meta: flush_handlers

- name: "[web] install packages needed for webservers"
  sudo: true
  sudo_user: root
  apt: pkg={{ item }} state=present
  with_items:
    - nginx         
    # circus
    - python-dev  
    - libzmq-dev
    - libevent-dev
    # supervisor
    - supervisor 

- name: "[web] supervisor service state"
  sudo: true
  sudo_user: root
  service: name=supervisor state=started enabled=yes

- name: "[web] install global libraries with pip"
  sudo: true
  sudo_user: root
  pip:
    extra_args="-i {{pypi_mirror_url}}"
    name={{item}}
    state=latest
  with_items:
    - circus
    - circus-web
#"

- name: "[web] force tornado <4 for circus compat"
  sudo: true
  sudo_user: root
  pip:
    extra_args="-i {{pypi_mirror_url}}"
    name=tornado
    version='3.2.2'

- name: "[web] Service file for circusd"
  sudo: true
  sudo_user: root
  template:
    src=circus-service.conf.j2
    dest="/etc/init/circusd.conf"

- name: "[web] Circus config dir"
  sudo: true
  sudo_user: root
  file:
    path="{{circus_config_dir}}/include"
    state=directory
    mode=0755

- name: "[web] Circus config file"
  sudo: true
  sudo_user: root
  template:
    src=circus.ini.j2
    dest="/etc/circus/circus.ini"
    mode=0644
  notify:
    - restart circusd

- name: "[web] circusd service state"
  sudo: true
  sudo_user: root
  service: name=circusd state=started enabled=yes

- name: "[web] nginx config for circus panel"
  sudo: true
  sudo_user: root
  template:
    src=nginx-circus-panel.conf.j2
    dest={{nginx_config_dir}}/sites-available/circus.conf
- file:
    src={{nginx_config_dir}}/sites-available/circus.conf
    dest={{nginx_config_dir}}/sites-enabled/circus.conf
    state=link
  notify:
    - restart nginx

- name: "[web] install main nginx conf"
  sudo: true
  sudo_user: root
  copy:
    src=nginx.conf
    dest={{nginx_config_dir}}/nginx.conf
  notify:
    - restart nginx

- name: "[web] remove default nginx site"
  sudo: true
  sudo_user: root
  file:
    path={{nginx_config_dir}}/sites-enabled/default 
    state=absent
  notify:
    - restart nginx

- name: "[web] Create default nginx site"
  sudo: true
  sudo_user: root
  sudo: True
  template:
    src='nginx-default.conf.j2'
    dest={{nginx_config_dir}}/sites-available/default.conf
  notify:
    - restart nginx

- name: "[web] Enable default site for nginx"
  sudo: true
  sudo_user: root
  sudo: True
  file:
    src={{nginx_config_dir}}/sites-available/default.conf
    dest={{nginx_config_dir}}/sites-enabled/default.conf
    state=link
  notify:
    - restart nginx

# - name: install htpasswd file
#   copy:
#     src=htpasswd
#     dest={{nginx_config_dir}}/htpasswd
#   notify:
#    - restart nginx

- name: "[web] nginx service state"
  sudo: true
  sudo_user: root
  service: name="nginx" enabled=yes state=started

