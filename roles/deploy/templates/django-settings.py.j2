from .base import *
from .license_tech import *
from .social_auth import *

import sys

DEBUG = False
TEMPLATE_DEBUG = DEBUG
STATIC_DEBUG = DEBUG

SESSION_COOKIE_SECURE = False
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{app.dbname}}',
        'USER': '{{app.dbuser}}',
        'PASSWORD': '{{app.dbpassword}}',
        'HOST': '{{dbhost}}',
        'PORT': '{{dbport}}',
        'CONN_MAX_AGE': 60
    },

{% if dbslaves is defined and dbslaves %}
{% for host in dbslaves %}
    'slave-{{ loop.index0 }}': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{app.dbname}}',
        'USER': '{{app.dbuser}}',
        'PASSWORD': '{{app.dbpassword}}',
        'HOST': '{{host}}',
        'PORT': '{{dbport}}',
        'CONN_MAX_AGE': 60
    },
{% endfor %}
{% endif %}
}

{% if dbslaves is defined and dbslaves %}
SLAVE_DATABASES = [
{% for host in dbslaves %}
   'slave-{{ loop.index0 }}',
{% endfor %}
]
DATABASE_ROUTERS = ('multidb.PinningMasterSlaveRouter', )
MIDDLEWARE_CLASSES += (
  'multidb.middleware.PinningRouterMiddleware',
)
MULTIDB_PINNING_SECONDS = 5
{% endif %}

ADMINS = (
    # ('Scott Taylor', 'staylor@rocktech.com'),
    ('Steve Bussetti', 'steve.bussetti@gmail.com'),
)

INSTALLED_APPS = INSTALLED_APPS + (
    'raven.contrib.django.raven_compat',
)

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_FOR_PROTO', 'https')

# storage and media
DEFAULT_FILE_STORAGE = 'training.common.storage.S3DefaultStorage'
STATICFILES_STORAGE = 'training.common.storage.S3StaticStorage'
DEFAULT_S3_PATH = 'media'
STATIC_S3_PATH = 'static'
AWS_ACCESS_KEY_ID = '{{app.aws_key_id}}'
AWS_SECRET_ACCESS_KEY = '{{app.aws_access_key}}'
AWS_STORAGE_BUCKET_NAME = '{{app.s3_bucket}}'
AWS_QUERYSTRING_AUTH = False

SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = '{{app.linkedin_oauth_key}}'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = '{{app.linkedin_oauth_secret}}'
SOCIAL_AUTH_SALESFORCE_OAUTH2_KEY = '{{app.salesforce_oauth_key}}'
SOCIAL_AUTH_SALESFORCE_OAUTH2_SECRET = '{{app.salesforce_oauth_secret}}'

MEDIA_ROOT = ''
MEDIA_URL = 'https://{{app.media_domain}}/media/'
STATIC_ROOT = ''
STATIC_URL = 'https://{{app.media_domain}}/static/'

EMAIL_BACKEND = 'sendgrid.backends.SendGridEmailBackend'
SENDGRID_EMAIL_HOST = '{{app.email_host}}'
SENDGRID_EMAIL_PORT = {{app.email_port}}
SENDGRID_EMAIL_USERNAME = '{{app.email_user}}'
SENDGRID_EMAIL_PASSWORD = '{{app.email_password}}'

# caching
CACHES = {
    'default': {
        'BACKEND': 'django_elasticache.memcached.ElastiCache',
        'LOCATION': '{{app.cache_host}}'
    }
}

RAVEN_CONFIG = {
    'dsn': 'https://e51d5901460646b290a2e5865e640fb7:ae1b4301a3bc4ac08033e0e0584594dc@app.getsentry.com/42128'
}

# logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format':
                ('%(levelname)s %(asctime)s %(module)s %(process)d '
                 '%(thread)d %(message)s'),
        },
        'simple': {
            'format': '%(levelname)s %(message)s',
        },
        'timestamped': {
            'format': '%(asctime)s %(levelname)s %(message)s',
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'timestamped',
            'stream': sys.stderr
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': True,
        },
        'training': {
            'handlers': ['console'],
            'level': 'INFO',
        }
    }
}

