user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
  worker_connections 2048;
}

http {

  ##
  # Basic Settings
  ##

  include /etc/nginx/mime.types;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;
  index    index.html
  server_names_hash_bucket_size 128;
  server_name_in_redirect off;
  default_type application/octet-stream;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log error;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/*;

  ##
  # Proxy settings
  ##

  proxy_set_header X-Real-IP $remote_addr;
  # ELB & NGINX both send accurate X-Forwarded-Proto appropriately..
  # ELB -> NGINX is https, NGINX -> Django is http always
  # In order to tell Django about the upstream ELB, we need
  # Our own header for the appserver, since headers are appended, not
  # overwritten
  proxy_set_header X-Forwarded-For-Proto $http_x_forwarded_proto;
  # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header Host $host;
  proxy_redirect off;
  client_max_body_size    32m;
  client_body_buffer_size 128k;
  proxy_connect_timeout   90;
  proxy_send_timeout      90;
  proxy_read_timeout      90;
  proxy_buffers           32 4k;

  ##
  # Virtual Host Configs
  ##

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
